version: "3.9"

networks:
  inner:
    name: network_inner
    # external: true
    driver: bridge 
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1 #网关地址

services:

  redis:
    container_name: rd_redis    # 指定一个自定义容器名称，而不是生成的默认名称。
    image: boiling/redis:latest # 服务的镜像名称或镜像ID。如果镜像在本地不存在，Compose将会尝试拉取镜像
    restart: always
    cap_add:
      - ALL
    ports:        # 配置端口 
      - 6379:6379 # 配置端口 - "宿主机端口:容器暴露端口"
    environment:  # 添加环境变量
      TIME_ZONE: Asia/Shanghai  # 时区
    volumes:      # 挂载外置配置文件
      - "./conf/redis.conf:/etc/redis/redis.conf"
      - "./data:/data"
    networks:
      inner:
        aliases:
           - REDIS_URL
    command: redis-server --port 6379 --requirepass redis --appendonly yes
    
  mariadb:
    container_name: rd_mariadb
    image: boiling/mariadb:latest
    restart: always
    cap_add:
      - ALL
    ports:
      - 3306:3306
    environment:  # 添加环境变量
      MARIADB_ROOT_PASSWORD: root # root 密码
      MYSQL_ROOT_HOST: '%'  # root 允许登录的host
      TIME_ZONE: Asia/Shanghai  # 时区
    volumes:
      - "/etc/localtime:/etc/localtime"
      - "./conf:/etc/mysql/conf.d"
      - "./logs:/var/log/mysql"
      - "./data:/var/lib/mysql"
      # - "/rendu-env/dockers/mysql/sql/init.sql:/docker-entrypoint-initdb.d/init.sql"
    networks:
      inner:
        aliases:
          - MYSQL_URL
    # command: --init-file /docker-entrypoint-initdb.d/init.sql

  cpp_env:    
    container_name: rd_cpp_env     # 指定一个自定义容器名称，而不是生成的默认名称。
    image: boiling/cpp_env:latest  # 服务的镜像名称或镜像ID。如果镜像在本地不存在，Compose将会尝试拉取镜像
    restart: always   # 容器总是重新启动
    cap_add:
      - ALL       # 使用ALL参数，container内的root拥有全部权限。同privileged: true类似
    ports:        # 配置端口 - "宿主机端口:容器暴露端口"
      - "23:22"      # 22是ssh端口      
      - "873:873"    # 873是srync端口
    networks:        # 配置所属网络，引用networks下的条目(就是最上面配置的networks中配置的网络)
      inner:
        aliases:
          - CPP_URL
